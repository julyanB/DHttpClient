<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net9.0;net8.0;netstandard2.1</TargetFrameworks>
		<LangVersion>latest</LangVersion>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<RootNamespace>DHttpClient</RootNamespace>
		<AssemblyName>DHttpClient.Core</AssemblyName>
		<PackageId>DSeries.DHttpClient.Core</PackageId>
		<Version>1.0.7</Version>
		<Title>DHttpClient - Fluent HTTP Client for .NET</Title>
		<Authors>Julian B.</Authors>
		<Description>A fluent HTTP client for .NET that simplifies HTTP requests with a chainable API, error handling, and built-in support for various content types.</Description>
		<PackageProjectUrl>https://github.com/julyanB/DHttpClient</PackageProjectUrl>
		<RepositoryUrl>https://github.com/julyanB/DHttpClient</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<!-- NuGet expects space-separated tags -->
		<PackageTags>http-client fluent-api http-requests dotnet http dhttpclient</PackageTags>
		<PackageIcon>D-Logo.png</PackageIcon>
		<PackageReadmeFile>README.md</PackageReadmeFile>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<EmbedUntrackedSources>true</EmbedUntrackedSources>
		<Deterministic>true</Deterministic>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<NoWarn>$(NoWarn);CS1591</NoWarn>
		<!-- suppress missing XML docs warnings for public members if any -->
		<Copyright>© 2025 DHttpClient.Core. All rights reserved.</Copyright>

		<PackageReleaseNotes>
			# DHttpClient v1.0.7

			## Fixes/Improvements
			- JSON: `ToObject&lt;T&gt;` no longer swallows `JsonException`; `SendObjectAsync&lt;T&gt;` reports deserialization errors correctly.
			- Headers: request headers are no longer pushed into content headers; invalid headers now throw with a clear message.
			- Multipart: removed manual quotes around `Content-Disposition` `Name`/`FileName` to avoid double-quoting.
			- DI extensions: added missing `using System.Net.Http;` so typed client overload compiles.

			## Features
			- Fluent API for building HTTP requests.
			- JSON/form-urlencoded/multipart support.
			- Responses as `HttpResponseMessage`, `string`, typed object, `Stream`, `byte[]`.
			- Live streaming with `IAsyncEnumerable&lt;string&gt;`.
			- Result wrapper with status code and error details.
			- Easy DI via `IHttpClientFactory`.
		</PackageReleaseNotes>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Http" Version="9.0.2" />
      <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="System.Text.Json" Version="9.0.4" />
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="8.0.0" PrivateAssets="All" />
	</ItemGroup>

	<ItemGroup>
		<None Include="D-Logo.png" Pack="true" PackagePath="." />
		<None Include="../README.md" Pack="true" PackagePath="." />
	</ItemGroup>

</Project>
